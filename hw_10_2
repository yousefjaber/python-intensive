import aiohttp
import asyncio
import os
import aiofiles

POKEAPI_URL = "https://pokeapi.co/api/v2/pokemon/"

async def fetch_pokemon(session, pokemon_id):
 
    url = f"{POKEAPI_URL}{pokemon_id}"
    async with session.get(url) as resp:
        return await resp.json()

async def download_image(session, url, folder, filename):

    async with session.get(url) as resp:
        if resp.status == 200:
            image_path = os.path.join(folder, filename)
            async with aiofiles.open(image_path, "wb") as file:
                await file.write(await resp.read())

async def process_pokemon(pokemon_id):

    async with aiohttp.ClientSession() as session:
        pokemon_data = await fetch_pokemon(session, pokemon_id)
        pokemon_name = pokemon_data["name"].capitalize()

        os.makedirs(pokemon_name, exist_ok=True)

        sprite_tasks = []
        for key, sprite_url in pokemon_data["sprites"].items():
            if isinstance(sprite_url, str):  # Some keys have None values
                filename = f"{key}.png"
                sprite_tasks.append(download_image(session, sprite_url, pokemon_name, filename))

        await asyncio.gather(*sprite_tasks)

async def main():
    pokemon_ids = [1, 4, 7, 25, 151]  # Bulbasaur, Charmander, Squirtle, Pikachu, Mew
    await asyncio.gather(*(process_pokemon(pid) for pid in pokemon_ids))

if __name__ == "__main__":
    asyncio.run(main())
